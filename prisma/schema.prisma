// Prisma schema for NextAuth + Project persistence (SQLite)

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// NextAuth models (Auth.js)
model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  lastActiveAt  DateTime?
  
  // Tier and usage tracking
  tier              String    @default("free") // free, plus, admin, super_admin
  dailyPdfCount     Int       @default(0)
  dailyEmailCount   Int       @default(0)
  lastUsageReset    DateTime  @default(now())
  lifetimePdfCount  Int       @default(0)
  lifetimeEmailCount Int      @default(0)

  accounts      Account[]
  sessions      Session[]
  projects      Project[]
  usageLogs     UsageLog[]
  auditLogs     AuditLog[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

// Application data
model Project {
  id             String   @id @default(cuid())
  ownerId        String
  name           String
  data           Json     // Mirrors SavedProject payload (positions, columns, tableData, emailConfig, image)
  clientProjectId String? // Original localStorage id for idempotent imports
  importSource    String? // e.g. 'localStorage'
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  owner User @relation(fields: [ownerId], references: [id], onDelete: Cascade)

  @@index([ownerId])
  @@unique([ownerId, name])
}

// Usage tracking
model UsageLog {
  id         String   @id @default(cuid())
  userId     String
  action     String   // pdf_generate, email_send, project_create, project_delete
  metadata   Json?    // Additional context (e.g., recipient email, project name, pdf count)
  createdAt  DateTime @default(now())
  
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@index([userId, action])
  @@index([createdAt])
}

// Audit logs for admin actions
model AuditLog {
  id          String   @id @default(cuid())
  actorId     String   // Admin who performed the action
  action      String   // user_upgrade, user_downgrade, project_delete, etc.
  targetId    String?  // ID of affected user/project
  targetType  String?  // user, project, etc.
  metadata    Json?    // Additional context
  createdAt   DateTime @default(now())
  
  actor User @relation(fields: [actorId], references: [id], onDelete: Cascade)
  
  @@index([actorId])
  @@index([targetId])
  @@index([createdAt])
}

